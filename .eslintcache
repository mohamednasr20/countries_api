[{"/Users/mohamednasr/Desktop/web/react/countries_api/src/index.js":"1","/Users/mohamednasr/Desktop/web/react/countries_api/src/apis/restCountries.js":"2","/Users/mohamednasr/Desktop/web/react/countries_api/src/components/App.js":"3","/Users/mohamednasr/Desktop/web/react/countries_api/src/reducer/index.js":"4","/Users/mohamednasr/Desktop/web/react/countries_api/src/actions/index.js":"5","/Users/mohamednasr/Desktop/web/react/countries_api/src/components/CountriesList.js":"6","/Users/mohamednasr/Desktop/web/react/countries_api/src/components/Header.js":"7","/Users/mohamednasr/Desktop/web/react/countries_api/src/components/CountryCard.js":"8","/Users/mohamednasr/Desktop/web/react/countries_api/src/components/SearchBar.js":"9"},{"size":557,"mtime":1610491569995,"results":"10","hashOfConfig":"11"},{"size":147,"mtime":1610483843990,"results":"12","hashOfConfig":"11"},{"size":1184,"mtime":1610604264093,"results":"13","hashOfConfig":"11"},{"size":451,"mtime":1610594241907,"results":"14","hashOfConfig":"11"},{"size":323,"mtime":1610593928676,"results":"15","hashOfConfig":"11"},{"size":1430,"mtime":1610605071491,"results":"16","hashOfConfig":"11"},{"size":1187,"mtime":1610594018926,"results":"17","hashOfConfig":"11"},{"size":1728,"mtime":1610605523430,"results":"18","hashOfConfig":"11"},{"size":2149,"mtime":1610604822566,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qmufo4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/mohamednasr/Desktop/web/react/countries_api/src/index.js",[],["41","42"],"/Users/mohamednasr/Desktop/web/react/countries_api/src/apis/restCountries.js",[],"/Users/mohamednasr/Desktop/web/react/countries_api/src/components/App.js",["43"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Container } from \"@material-ui/core\";\nimport CountriesList from \"./CountriesList\";\nimport Header from \"./Header\";\nimport SearchBar from \"./SearchBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n}));\n\nconst App = ({ isDarkMode }) => {\n  const classes = useStyles();\n\n  const theme = createMuiTheme({\n    palette: {\n      type: isDarkMode ? \"dark\" : \"light\",\n      primary: {\n        main: isDarkMode ? \"hsl(0, 0%, 100%)\" : \"hsl(200, 15%, 8%)\",\n      },\n      background: {\n        paper: isDarkMode ? \"hsl(207, 26%, 17%)\" : \" hsl(0, 0%, 98%)\",\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper elevation={0} className={classes.root} square>\n        <Header />\n        <SearchBar />\n\n        <CountriesList />\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { isDarkMode: state.isDarkMode };\n};\n\nexport default connect(mapStateToProps)(App);\n","/Users/mohamednasr/Desktop/web/react/countries_api/src/reducer/index.js",[],"/Users/mohamednasr/Desktop/web/react/countries_api/src/actions/index.js",[],"/Users/mohamednasr/Desktop/web/react/countries_api/src/components/CountriesList.js",["44"],"import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { fetchCountries } from \"../actions\";\nimport CountryCard from \"./CountryCard\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"center\",\n  },\n}));\n\nconst CountriesList = ({ countries, fetchCountries, isDarkMode }) => {\n  const classes = useStyles();\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  const countriesList = !countries.length\n    ? \"loading\"\n    : countries.map((country) => {\n        return (\n          <CountryCard\n            key={country.name}\n            name={country.name}\n            flag={country.flag}\n            title={country.name}\n            population={country.population}\n            region={country.region}\n            capital={country.capital}\n            darkMode={isDarkMode}\n          />\n        );\n      });\n\n  return (\n    <Container>\n      <Grid\n        className={classes.root}\n        container\n        spacing={3}\n        justify=\"center\"\n        alignContent=\"center\"\n      >\n        {countriesList}\n      </Grid>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { countries: state.countries, isDarkMode: state.isDarkMode };\n};\n\nexport default connect(mapStateToProps, { fetchCountries })(CountriesList);\n","/Users/mohamednasr/Desktop/web/react/countries_api/src/components/Header.js",[],"/Users/mohamednasr/Desktop/web/react/countries_api/src/components/CountryCard.js",["45"],"/Users/mohamednasr/Desktop/web/react/countries_api/src/components/SearchBar.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":5,"column":17,"nodeType":"52","messageId":"53","endLine":5,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":19,"column":6,"nodeType":"56","endLine":19,"endColumn":8,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"58","line":24,"column":52,"nodeType":"52","messageId":"53","endLine":24,"endColumn":60},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCountries'. Either include it or remove the dependency array. If 'fetchCountries' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["61"],"'darkMode' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [fetchCountries]",{"range":"64","text":"65"},[551,553],"[fetchCountries]"]